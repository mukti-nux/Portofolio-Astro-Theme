---
import Layout from "../layouts/Layout.astro";
import Container from "../components/Container.astro";
---

<Layout title="ShazQIAI">
  <div class="pt-36">
    <Container>
      <div
        class="relative max-w-2xl mx-auto mt-16 rounded-xl p-6 bg-white dark:bg-gray-900 shadow-lg transition-all duration-300 border border-transparent hover:border-[3px] hover:border-[rgb(0,255,255)] group"
      >
        <div
          class="absolute inset-0 animate-gradient-move bg-gradient-to-r from-cyan-400 via-purple-500 to-pink-500 
                bg-[length:200%_200%] bg-[position:0%_50%] blur-lg opacity-80 rounded-xl z-[-1]"
        ></div>

        <!-- Model selector -->
        <div class="mb-4 flex items-center space-x-2">
          <label for="model-select" class="text-gray-900 dark:text-white font-semibold">Pilih Model:</label>
          <select
            id="model-select"
            class="rounded-md border border-gray-300 dark:border-gray-700 bg-white dark:bg-gray-800 text-gray-900 dark:text-white p-1 focus:outline-none focus:ring-2 focus:ring-primary"
          >
            <option value="gpt">GPT 3.5 Turbo</option>
            <option value="gemini">Gemini 2.0</option>
          </select>
        </div>

        <!-- Chat Content -->
        <div
          id="chat-messages"
          class="mb-4 space-y-3 max-h-64 overflow-y-auto text-gray-900 dark:text-white text-sm"
        >
          <div class="text-left">🤖 Halo! Ada yang bisa aku bantu?</div>
        </div>

        <!-- Input -->
        <form id="chat-form" class="flex space-x-2">
          <input
            id="chat-input"
            class="flex-1 rounded-md p-2 border border-gray-300 dark:border-gray-700 bg-white dark:bg-gray-800 text-gray-900 dark:text-white focus:outline-none focus:ring-2 focus:ring-primary"
            placeholder="Tulis pertanyaanmu..."
          />
          <button
            type="submit"
            class="bg-primary text-white px-4 py-2 rounded-md hover:brightness-110 transition"
          >
            Kirim
          </button>
        </form>
      </div>
    </Container>
  </div>

  <script is:inline>
    const form = document.getElementById("chat-form");
    const input = document.getElementById("chat-input");
    const messages = document.getElementById("chat-messages");
    const modelSelect = document.getElementById("model-select");

    // Simpan riwayat sebagai array supaya bisa untuk GPT dan Gemini (untuk Gemini nanti diubah jadi string)
    const history = [{ role: "system", content: "🤖 Halo! Ada yang bisa aku bantu?" }];

    function renderMessage(role, text) {
      const div = document.createElement("div");
      div.className = role === "user" ? "text-left" : "text-left font-semibold";
      div.textContent = (role === "user" ? "🧑 " : "🤖 ") + text;
      messages.appendChild(div);
      messages.scrollTop = messages.scrollHeight;
    }

    // Render pesan awal
    renderMessage("assistant", "Halo! Ada yang bisa aku bantu?");

    form?.addEventListener("submit", async (e) => {
      e.preventDefault();
      const text = input.value.trim();
      if (!text) return;

      // Tampilkan pesan user di chat dan simpan di history
      renderMessage("user", text);
      history.push({ role: "user", content: text });

      input.value = "";

      const botMsgDiv = document.createElement("div");
      botMsgDiv.textContent = "🤖 Sedang mengetik...";
      botMsgDiv.className = "text-left italic text-gray-500";
      messages.appendChild(botMsgDiv);
      messages.scrollTop = messages.scrollHeight;

      try {
        const model = modelSelect.value;
        const payload = model === "gpt"
          ? { model: "gpt", message: history }
          : { model: "gemini", messages: history.map(m => `${m.role === "user" ? "User" : "AI"}: ${m.content}`).join("\n") };

        const res = await fetch("https://shazqi-ai-backend-deploy.vercel.app/api/chat", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify(payload),
        });

        const data = await res.json();
        const reply = data.reply || "Maaf, tidak ada jawaban.";

        botMsgDiv.textContent = "🤖 " + reply;
        botMsgDiv.classList.remove("italic", "text-gray-500");

        // Simpan balasan AI ke history dan tampilkan
        history.push({ role: "assistant", content: reply });
      } catch (err) {
        botMsgDiv.textContent = "🤖 Maaf, terjadi kesalahan.";
        botMsgDiv.classList.remove("italic", "text-gray-500");
        botMsgDiv.classList.add("text-red-500");
      }

      messages.scrollTop = messages.scrollHeight;
    });
  </script>
</Layout>
