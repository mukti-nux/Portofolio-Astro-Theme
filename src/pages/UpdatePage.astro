---
import Layout from "../layouts/Layout.astro"
import Container from "../components/Container.astro"
import dokumentasiList from "../data/dokumentasiList";
---

<Layout title="UpdatePage">
  <div class="relative pt-36" id="updates">
    <Container>
      <div aria-hidden="true" class="absolute inset-0 h-max w-full m-auto grid grid-cols-2 -space-x-52 opacity-40 dark:opacity-20">
        <div class="blur-[106px] h-56 bg-gradient-to-br from-primary to-purple-400 dark:from-blue-700"></div>
        <div class="blur-[106px] h-32 bg-gradient-to-r from-cyan-400 to-sky-300 dark:to-indigo-600"></div>
      </div>

      <div class="relative">
        <h1 class="text-center text-4xl font-bold text-gray-800 dark:text-white md:text-5xl">Update Page</h1>
        <p class="text-center text-xl text-gray-600 dark:text-gray-300 mb-10">
          ✨You can search for your Documents on this page.✨
        </p>

        <!-- 🔍 Search Component -->
        <div id="search-container" class="max-w-xl mx-auto mb-10">
          <input
            id="search-input"
            type="text"
            placeholder="Search documentation..."
            class="w-full px-5 py-3 rounded-xl border border-gray-300 dark:border-gray-700 bg-white dark:bg-gray-800 text-black dark:text-white focus:outline-none focus:ring-2 focus:ring-primary"
          />
        </div>

        <div id="results" class="flex flex-col items-center space-y-10"></div>
      </div>
    </Container>
  </div>

  <!-- ✅ Client script to handle Fuse.js search -->
  <script type="module" is:client>
    import Fuse from 'fuse.js';
    import DocumentationCard from '../components/DocumentationCard.jsx';
    import dokumentasiList from '../data/dokumentasiList';
    import { render } from 'preact';

    const input = document.getElementById("search-input");
    const resultsContainer = document.getElementById("results");

    const fuse = new Fuse(dokumentasiList, {
      keys: ['title', 'description', 'id'],
      threshold: 0.3,
    });

    function renderResults(docs) {
      resultsContainer.innerHTML = "";
      docs.forEach(doc => {
        const wrapper = document.createElement("div");
        render(DocumentationCard(doc.item), wrapper);
        resultsContainer.appendChild(wrapper);
      });
    }

    // Initial render semua
    renderResults(dokumentasiList.map(item => ({ item })));

    input.addEventListener("input", () => {
      const keyword = input.value.trim();
      if (!keyword) {
        renderResults(dokumentasiList.map(item => ({ item })));
      } else {
        const results = fuse.search(keyword);
        renderResults(results);
      }
    });
  </script>
</Layout>
